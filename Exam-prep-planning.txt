Preparation resources:
====================
1. Udemy tutorial
2. Amazon documentation
3. Amazon frequently asked questions for selected aws services like EC2, S3, SQS, VPC, Route53, RDS
4. White papers
5. Sample question papers
6. Blue print review





AWS Services:
============

=>COMPUTE:
1) Amazon EC2                                           - A web service that provides secure, resizable compute capacity in the cloud.
2) Amazon EC2 Autoscaling                               - Allows you to scale EC2 instances up or down
3) Amazon Elastic Container Service(ECS)                - Container orchestration service for Docker container.
4) Amazon Elastic Container Service for Kubernetes(EKS) - Makes it easy to deploy, manage and scale containerized applications using                                                                 Kubernetes.
5) Amazon Elastic Container Registry(ECR)               - Fully managed Docker container registry which can be used to store, manage and                                                             deploy Docker images.
6) Amazon Lightsail                                     - Easiest way to launch and manage virtual private server. It contains everything                                                           required ranging from a virtual machine, SSD based storage, data transfer, DNS                                                             management and a static IP.
7) AWS Batch                                            - Fully Managed batch processing for any scale. Like Autosys.
8) AWS Elastic Bean Stalk                               - Service to deploy & scale web applications developed in                                                                                   Java,.Net,PHP,Node.js,Go,Ruby,Python & Docker in the servers like Apache, Nginx,                                                           IIS & Passenger.
9) AWS Fargate                                          - Its an aws technology for ECS and EKS that allows you to run containers without                                                           having to manage servers, clusters etc.With this, you are no longer required to                                                           provision, configure, scale a cluster of virtual machines to run containers.
10) AWS Lambda                                          - Lets you run code without provisioning or managing servers.
11) AWS Serverless Application Repository               - Enables you to quickly deploy code samples, components, complete applications of                                                           common use cases such as web & mobile backends, event & data processing,                                                                   logging, monitoring, IoT etc.
12) Elastic Load Balancing                              - Automatically distributes incoming application traffic across multiple targets.
                                                          1) Application Load Balancer - for http, https traffic
                                                          2) Network Load Balancer - for tcp traffic
                                                          3) Classic Load Balancer - basic load balancer for traffic between EC2 instances
13) VMWare cloud on AWS                                 - Service that allows to migrate and extend VMware Vsphere based environments to                                                             amazon cloud.

=>STORAGE:
1) Amazon Simple Storage Service(S3)                    - Object Storage(files,pics,videos etc. Not suitable to install os or other things). 
2) Amazon Elastic Block Store(EBS)                      - Provides persistent block storage volumes to be used with EC2 instances.
3) Amazon Elastic File System(EFS)                      - Provides scalable, elastic file storage for aws cloud service and on-premises resources
4) Amazon Glacier                                       - Data archiving solution. Lowest cost.    
5) AWS Storage Gateway                                  - Hybrid storage service that enables your on-premise applications to access aws cloud storage.
6) AWS Snowball                                         - Petabyte scale data transfer mechanism to move data into and out of aws cloud.
7) AWS Snowball Edge                                    - 100TB storage device. Petabyte scale data transport with onboard storage and compute capability.
8) AWS Snowmobile                                       - Exabyte scale data transport service.



VPC Random notes:
================
Virtual private cloud.

- A VPC has by default one main route table. It can have many tables as well
- A subnet can have only one route table at a time. 
- A route table can be associated with multiple subnets but a subnet cannot be associated with multiple route tables.

- A VPC has an implicit router.
- A VPC automatically comes with a main route table that you can modify.
- Additional custom route tables can be created for your VPC but there is a limit on the number of route tables that you can create for a VPC and the number of routes you can add per route table.
- Main route table cannot be deleted but can be replaced with a custom table that you have created.

- Every single entry in route table is a route.
- Every route speficies a destination CIDR(canonical interdomain routing) and a target
- Every route table contains a local route for communication within th VPC over IPV4.

General notes on Storage types:
===============================
Storage types:
1) File storage
2) Block storage
3) Object storage

Storage technologies:
====================
1) NAS - Network attached storage
  - Usually a singe storage server sharing files over network connected though Ethernet. Its basically a file server. The control of the storage medium is with the file server itself and not the accessing server's operating system. Example, the network drives that we use on our dekstop. Mostly used with file storage types with NFS, CIFS protocols.
2) SAN - Storage area network
  -  A huge array of storage devices connected to the network through fiber cables for high speed. Each block of storage can be configured individually and mounted on different servers/devices and the accessing servers, drivers can control this block or volume of storage as if it is locally avalable in its server itself. And this storage space can be used by the acessing server for software installations. Used with block storage with iSCSI protocol.


Lab to do:
- create an ec2 instance with bootstrap script to install and start apache.
- create a load balancer
- create autoscaling config and play with different scenarios.


Route53:
--------
Route 53 performs 3 main functions,
- Register domain names(link numbers for more content; 100)
- Route internet traffic to the resources for your domain(200)
- check the health of your resources(300)


As I understand the above functions can be re-phrased for my ease of understanding like, Route53 can be,
- used for domain registration
- act as a DNS service for the registered domain
- configured to perform health checks on your resources and send notification to you upon identifying any situations.
I learnt that Customers have the choice as to what they want from Route53. Customers can use Route53 for just domain registration or also use it as the DNS service for the domain too or use all the 3 services of route53


100) How Domain registration works:
---------------------------------
Domain is nothing but the name of your website that you wish to call it as.
1) You choose a domain name, checks its availability to confirm if its not already registered.
2) Register the selected domain name with Route 53 by providing names and contact information for the domain owner and other contacts.
   When you register a domain with Route 53, the service automatically makes itself the DNS service for the domain by following:
   *) Creates a Hosted Zone* that has the same name as your domain
   *) Assigns a set of 4 name servers to hosted zone. When someone calls your website from browser, these name servers tell them where to find
      the resources(such as web server, S3 etc) of your website.
   *) Gets the name servers from the hosted zone and adds them to the domain.
3) At the end of registration process, Amazon sends your information to the registrar for the domain(either Amazon Registrar Inc or Gandi)
4) The registrar sends your information to the registry for the domain. Registry is the company that sells domains.
5) The registry stores your information about your domain in their own database and also in the public WHOIS database.

* Hosted Zone:
A public hosted zone is a container that holds information about how you want to route traffic on the internet for a specific domain such as
example.com and its subdomains like apex.example.com, acme.example.com.
This works by creating records(resource record sets) in the hosted zone to specify how you want to route traffic for the domain and subdomains

200) How Internet Traffic is Routed to your website or web application:
----------------------------------------------------------------------
https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html

300) How Route53 checks the health of your resources:
----------------------------------------------------
https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html


EC2 Placement Groups:
---------------------
Placement groups determine how EC2 instances are placed on underlying hardware. This can be done using the below two strategies,

1) Cluster - Clusters intances into a low-latency group in a single Availability Zone.
2) Spread - spreads instances across underlying hardware spanning multiple availability zones.

Cluster Placement Groups(if simply placement group is mentioned, it refers to cluster placement group):
-------------------------
- A cluster placement group is a logical grouping of instances within a single Availability Zone.
- Recommended for applications that require low network latency, high network throughput(highest packet per second) or both and if the majority of the traffic is between the instances in the group. Advisable to choose EC2 instance type that supports 'Enhanced Networking'.
- Advisable to launch the number of instances you need in the placement group in a single launch request
- And advisable to use same EC2 instance type for all the instances in the placement group.
- Trying to add more instances to the placement group later or trying to launch more than one instance type in the placement group may result in insufficient capacity error.
- If you stop an instance in a placement group and then start it again, it still runs in the placement group. But the start will fail if there is no enough capacity for the instance.
- If capacity error occurs while launching an instance in a placement group(that already has running instances), stop and start all the instances in the placement group and try the launch again. Restarting the instances may migrate them to hardware that has capacity for all the requested instances.

Spread Placement Groups
-----------------------
- A spread placement group is a group of instances that are each placed on distinct underlying hardware spanning multiple AZs.
- Recommended for applications that have a small number of critical instances that should be kept separate from each other.
- Keeping instances in different hardware reduces the risk of simultaneous failures that might occur if kept in same underlying hardware.
- Here Instances of different types can be used and instances can be launced over time(not required to launch all instances at one single time)
- You can have a max. of 7 running instances per AZ per group.
- If start/launch of an instance in a spread placement group fails or there is no sufficient unique hardware to fulfill the request, Amazon will make more distinct hardware available over time and you can try your request again later.
